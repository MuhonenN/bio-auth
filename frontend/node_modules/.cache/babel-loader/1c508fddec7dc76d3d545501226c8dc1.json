{"ast":null,"code":"var o = (s, e, r) => {\n  if (!e.has(s)) throw TypeError(\"Cannot \" + r);\n};\n\nvar t = (s, e, r) => (o(s, e, \"read from private field\"), r ? r.call(s) : e.get(s)),\n    u = (s, e, r) => {\n  if (e.has(s)) throw TypeError(\"Cannot add the same private member more than once\");\n  e instanceof WeakSet ? e.add(s) : e.set(s, r);\n},\n    i = (s, e, r, n) => (o(s, e, \"write to private field\"), n ? n.call(s, r) : e.set(s, r), r);\n\nimport { Passage as f } from \"@passageidentity/passage-js\";\nvar a,\n    g = class {\n  constructor(e) {\n    u(this, a, void 0);\n    i(this, a, new f(\"\").getCurrentUser(e));\n  }\n\n  authGuard() {\n    return t(this, a).authGuard();\n  }\n\n  async userInfo() {\n    return t(this, a).userInfo();\n  }\n\n};\na = new WeakMap();\nexport { g as PassageUser };","map":{"version":3,"sources":["G:/repos/Full Stack/bio-auth/frontend/node_modules/@passageidentity/passage-auth/dist/package/PassageUser/index.mjs"],"names":["o","s","e","r","has","TypeError","t","call","get","u","WeakSet","add","set","i","n","Passage","f","a","g","constructor","getCurrentUser","authGuard","userInfo","WeakMap","PassageUser"],"mappings":"AAAA,IAAIA,CAAC,GAAC,CAACC,CAAD,EAAGC,CAAH,EAAKC,CAAL,KAAS;AAAC,MAAG,CAACD,CAAC,CAACE,GAAF,CAAMH,CAAN,CAAJ,EAAa,MAAMI,SAAS,CAAC,YAAUF,CAAX,CAAf;AAA6B,CAA1D;;AAA2D,IAAIG,CAAC,GAAC,CAACL,CAAD,EAAGC,CAAH,EAAKC,CAAL,MAAUH,CAAC,CAACC,CAAD,EAAGC,CAAH,EAAK,yBAAL,CAAD,EAAiCC,CAAC,GAACA,CAAC,CAACI,IAAF,CAAON,CAAP,CAAD,GAAWC,CAAC,CAACM,GAAF,CAAMP,CAAN,CAAvD,CAAN;AAAA,IAAuEQ,CAAC,GAAC,CAACR,CAAD,EAAGC,CAAH,EAAKC,CAAL,KAAS;AAAC,MAAGD,CAAC,CAACE,GAAF,CAAMH,CAAN,CAAH,EAAY,MAAMI,SAAS,CAAC,mDAAD,CAAf;AAAqEH,EAAAA,CAAC,YAAYQ,OAAb,GAAqBR,CAAC,CAACS,GAAF,CAAMV,CAAN,CAArB,GAA8BC,CAAC,CAACU,GAAF,CAAMX,CAAN,EAAQE,CAAR,CAA9B;AAAyC,CAA7M;AAAA,IAA8MU,CAAC,GAAC,CAACZ,CAAD,EAAGC,CAAH,EAAKC,CAAL,EAAOW,CAAP,MAAYd,CAAC,CAACC,CAAD,EAAGC,CAAH,EAAK,wBAAL,CAAD,EAAgCY,CAAC,GAACA,CAAC,CAACP,IAAF,CAAON,CAAP,EAASE,CAAT,CAAD,GAAaD,CAAC,CAACU,GAAF,CAAMX,CAAN,EAAQE,CAAR,CAA9C,EAAyDA,CAArE,CAAhN;;AAAwR,SAAOY,OAAO,IAAIC,CAAlB,QAAwB,6BAAxB;AAAsD,IAAIC,CAAJ;AAAA,IAAMC,CAAC,GAAC,MAAK;AAACC,EAAAA,WAAW,CAACjB,CAAD,EAAG;AAACO,IAAAA,CAAC,CAAC,IAAD,EAAMQ,CAAN,EAAQ,KAAK,CAAb,CAAD;AAAiBJ,IAAAA,CAAC,CAAC,IAAD,EAAMI,CAAN,EAAQ,IAAID,CAAJ,CAAM,EAAN,EAAUI,cAAV,CAAyBlB,CAAzB,CAAR,CAAD;AAAsC;;AAAAmB,EAAAA,SAAS,GAAE;AAAC,WAAOf,CAAC,CAAC,IAAD,EAAMW,CAAN,CAAD,CAAUI,SAAV,EAAP;AAA6B;;AAAc,QAARC,QAAQ,GAAE;AAAC,WAAOhB,CAAC,CAAC,IAAD,EAAMW,CAAN,CAAD,CAAUK,QAAV,EAAP;AAA4B;;AAA7J,CAAb;AAA4KL,CAAC,GAAC,IAAIM,OAAJ,EAAF;AAAc,SAAOL,CAAC,IAAIM,WAAZ","sourcesContent":["var o=(s,e,r)=>{if(!e.has(s))throw TypeError(\"Cannot \"+r)};var t=(s,e,r)=>(o(s,e,\"read from private field\"),r?r.call(s):e.get(s)),u=(s,e,r)=>{if(e.has(s))throw TypeError(\"Cannot add the same private member more than once\");e instanceof WeakSet?e.add(s):e.set(s,r)},i=(s,e,r,n)=>(o(s,e,\"write to private field\"),n?n.call(s,r):e.set(s,r),r);import{Passage as f}from\"@passageidentity/passage-js\";var a,g=class{constructor(e){u(this,a,void 0);i(this,a,new f(\"\").getCurrentUser(e))}authGuard(){return t(this,a).authGuard()}async userInfo(){return t(this,a).userInfo()}};a=new WeakMap;export{g as PassageUser};\n"]},"metadata":{},"sourceType":"module"}