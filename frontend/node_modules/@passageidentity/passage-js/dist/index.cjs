var V=Object.create;var k=Object.defineProperty;var Y=Object.getOwnPropertyDescriptor;var Q=Object.getOwnPropertyNames,F=Object.getOwnPropertySymbols,X=Object.getPrototypeOf,J=Object.prototype.hasOwnProperty,Z=Object.prototype.propertyIsEnumerable;var q=(s,e,t)=>e in s?k(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t,H=(s,e)=>{for(var t in e||(e={}))J.call(e,t)&&q(s,t,e[t]);if(F)for(var t of F(e))Z.call(e,t)&&q(s,t,e[t]);return s};var G=s=>k(s,"__esModule",{value:!0});var E=(s,e)=>{for(var t in e)k(s,t,{get:e[t],enumerable:!0})},j=(s,e,t,n)=>{if(e&&typeof e=="object"||typeof e=="function")for(let a of Q(e))!J.call(s,a)&&(t||a!=="default")&&k(s,a,{get:()=>e[a],enumerable:!(n=Y(e,a))||n.enumerable});return s},ee=(s,e)=>j(G(k(s!=null?V(X(s)):{},"default",!e&&s&&s.__esModule?{get:()=>s.default,enumerable:!0}:{value:s,enumerable:!0})),s),te=(s=>(e,t)=>s&&s.get(e)||(t=j(G({}),e,1),s&&s.set(e,t),t))(typeof WeakMap!="undefined"?new WeakMap:0);var K=(s,e,t)=>{if(!e.has(s))throw TypeError("Cannot "+t)};var p=(s,e,t)=>(K(s,e,"read from private field"),t?t.call(s):e.get(s)),S=(s,e,t)=>{if(e.has(s))throw TypeError("Cannot add the same private member more than once");e instanceof WeakSet?e.add(s):e.set(s,t)},_=(s,e,t,n)=>(K(s,e,"write to private field"),n?n.call(s,t):e.set(s,t),t);var se={};E(se,{Identifier:()=>M,Passage:()=>z,PassageError:()=>r,PassageErrorCode:()=>m,PassageUserStatusEnum:()=>C,User:()=>N});var h=class{encodeBytes(e){return btoa(String.fromCharCode(...new Uint8Array(e))).replace(/\+/g,"-").replace(/\//g,"_").replace(/=+$/,"")}decodeBytes(e){let t=e.replace(/-/g,"+").replace(/_/g,"/").replace(/=+$/,"");return Uint8Array.from(atob(t),a=>a.charCodeAt(0))}};var r=class extends Error{constructor(e,t){super();this.name="PassageError",this.statusCode=t.status,this.statusText=t.statusText,this.message=this._parsePsgErrorResponse(e)}_parsePsgErrorResponse(e){try{return e=JSON.parse(e),e.error?e.error:""}catch{return e}}},m=(i=>(i[i.MultipleChoice=300]="MultipleChoice",i[i.MovedPermanantly=301]="MovedPermanantly",i[i.Found=302]="Found",i[i.SeeOther=303]="SeeOther",i[i.NotModified=304]="NotModified",i[i.TemporaryRedirect=307]="TemporaryRedirect",i[i.PermanentRedirect=308]="PermanentRedirect",i[i.BadRequest=400]="BadRequest",i[i.Unauthorized=401]="Unauthorized",i[i.PaymentRequired=402]="PaymentRequired",i[i.Forbidden=403]="Forbidden",i[i.NotFound=404]="NotFound",i[i.MethodNotAllowed=405]="MethodNotAllowed",i[i.NotAcceptable=406]="NotAcceptable",i[i.ProxyAuthenticationRequired=407]="ProxyAuthenticationRequired",i[i.RequestTimeout=408]="RequestTimeout",i[i.Conflict=409]="Conflict",i[i.Gone=410]="Gone",i[i.LengthRequired=411]="LengthRequired",i[i.PreconditionFailed=412]="PreconditionFailed",i[i.PayloadTooLarge=413]="PayloadTooLarge",i[i.URITooLong=414]="URITooLong",i[i.UnsupportedMediaType=415]="UnsupportedMediaType",i[i.RangeNotSatisfiable=416]="RangeNotSatisfiable",i[i.ExpectationFailed=417]="ExpectationFailed",i[i.MisdirectedRequest=421]="MisdirectedRequest",i[i.UnprocessableEntity=422]="UnprocessableEntity",i[i.Locked=423]="Locked",i[i.FailedDependency=424]="FailedDependency",i[i.TooEarly=425]="TooEarly",i[i.UpgradeRequired=426]="UpgradeRequired",i[i.PreconditionRequired=428]="PreconditionRequired",i[i.TooManyRequests=429]="TooManyRequests",i[i.RequestHeaderFieldsTooLarge=431]="RequestHeaderFieldsTooLarge",i[i.UnavailableForLegalReasons=451]="UnavailableForLegalReasons",i[i.InternalServerError=500]="InternalServerError",i[i.NotImplemented=501]="NotImplemented",i[i.BadGateway=502]="BadGateway",i[i.ServiceUnavailable=503]="ServiceUnavailable",i[i.GatewayTimeout=504]="GatewayTimeout",i[i.HTTPVersionNotSupported=505]="HTTPVersionNotSupported",i[i.VariantAlsoNegotiates=506]="VariantAlsoNegotiates",i[i.InsufficientStorage=507]="InsufficientStorage",i[i.LoopDetected=508]="LoopDetected",i[i.NotExtended=510]="NotExtended",i[i.NetworkAuthenticationRequired=511]="NetworkAuthenticationRequired",i[i.PSGCredObjectDoesNotExist=700]="PSGCredObjectDoesNotExist",i[i.PSGParsePublicKeyForNewDeviceFailed=701]="PSGParsePublicKeyForNewDeviceFailed",i[i.PSGParsePublicKeyForLoginFailed=702]="PSGParsePublicKeyForLoginFailed",i[i.PSGCouldNotGetUserCredential=703]="PSGCouldNotGetUserCredential",i))(m||{});var x=new h,d=class{_isLocalHost(){return Boolean(window.location.hostname==="localhost"||window.location.hostname==="[::1]"||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/))}_isHttps(){return location.protocol==="https:"}setAuthToken(e){localStorage.setItem("psg_auth_token",e);let t=!this._isHttps()&&this._isLocalHost();document.cookie=`psg_auth_token = ${e}; path=/ ${t?"":";secure"}`}deleteAuthToken(){localStorage.removeItem("psg_auth_token"),document.cookie="psg_auth_token=; expires=Thu, 01 Jan 1970 00:00:00 UTC;"}async psgCredIDExists(e){let t=e.user.id,n=e.handshake.challenge.publicKey.allowCredentials,a=localStorage.getItem("psg_cred_obj");if(!a)throw new r("Could not get psg_cred_obj",{status:700,statusText:"PSG Cred Object Does Not Exist"});let c=JSON.parse(a)[t];return n.find(B=>{if(x.encodeBytes(x.decodeBytes(B.id))===x.encodeBytes(x.decodeBytes(c)))return!0})}setPsgCredID(e,t){if(!t)throw new r("Could not get user's credential",{status:703,statusText:"PSG Could Not Get User Credential"});let n=localStorage.getItem("psg_cred_obj");if(n){let a=JSON.parse(n);a[e]=t==null?void 0:t.id,localStorage.setItem("psg_cred_obj",JSON.stringify(a))}else localStorage.setItem("psg_cred_obj",JSON.stringify({[e]:t==null?void 0:t.id}))}};async function o(s){return s.ok?s.json():await s.text().then(e=>{throw new r(e,s)})}function U(){let s=navigator.userAgent.toLowerCase().indexOf("firefox")>-1,e=window.navigator.userAgent.match(/Firefox\/([0-9]+)\./),t=e?parseInt(e[1]):0;return navigator.platform.indexOf("Win")!==-1&&s&&t===98}function P(s){let e=new Uint8Array(68);e.set(s.slice(0,68));let t=new Uint8Array(s.byteLength-68);t.set(s.slice(68,s.byteLength));let n=new Uint8Array(15),a=new Uint8Array(e.byteLength+n.byteLength+t.byteLength);a.set(e,0),a.set(n,e.byteLength),a.set(t,e.byteLength+n.byteLength);let c=a[30]+15;return a.set([c],30),a}var v=new h,ie=new d,O=class{constructor(e,t){this.apiUrl=e+"/register/",this.identifier=t}async withWebAuthn(){let e=await fetch(this.apiUrl+"webauthn/start",{body:JSON.stringify({identifier:this.identifier}),method:"POST"}).then(o),t=await navigator.credentials.create({publicKey:this._parsePublicKey(e.handshake.challenge.publicKey)}).catch(w=>{throw new r("error parsing public key for webAuthn",{status:702,statusText:"PSG Parse Public Key For Login Failed"})}).then(w=>w),n=new Uint8Array(t==null?void 0:t.response.attestationObject);U()&&(n=P(n));let a=e.user.id,c=await fetch(this.apiUrl+"webauthn/finish",{method:"POST",body:JSON.stringify({user_id:a,handshake_id:e.handshake.id,handshake_response:{rawId:v.encodeBytes(t==null?void 0:t.rawId),id:t==null?void 0:t.id,type:t==null?void 0:t.type,response:{attestationObject:v.encodeBytes(n),clientDataJSON:v.encodeBytes(t==null?void 0:t.response.clientDataJSON)}}})}).then(o);return ie.setPsgCredID(a,t),c.auth_result}_parsePublicKey(e){return e.challenge=v.decodeBytes(e.challenge.toString()),e.user.id=v.decodeBytes(e.user.id.toString()),e}};var y=new h,ne=new d,L=class{constructor(e,t){this.apiUrl=e+"/login/",this.identifier=t}async withWebAuthn(){let e=await fetch(this.apiUrl+"webauthn/start",{body:JSON.stringify({identifier:this.identifier}),method:"POST"}).then(o);if(!await ne.psgCredIDExists(e))throw new r("psg_cred_obj does not exist in the allow list",{status:700,statusText:"psg_cred_obj does not exist in the allow list"});let n=await navigator.credentials.get({publicKey:this._parsePublicKey(e.handshake.challenge.publicKey)}).catch(c=>{throw new r("error parsing public key for webAuthn",{status:702,statusText:"PSG Parse Public Key For Login Failed"})}).then(c=>c);return n?(await fetch(this.apiUrl+"webauthn/finish",{method:"POST",body:JSON.stringify({user_id:e.user.id,handshake_id:e.handshake.id,handshake_response:{id:n.id,rawId:y.encodeBytes(n.rawId),type:n.type,response:{clientDataJSON:y.encodeBytes(n.response.clientDataJSON),authenticatorData:y.encodeBytes(n.response.authenticatorData),signature:y.encodeBytes(n.response.signature),userHandle:y.encodeBytes(n.response.userHandle)}}})}).then(o)).auth_result:{auth_token:"",redirect_url:""}}_parsePublicKey(e){if(e.challenge=Uint8Array.from(atob(e.challenge.toString()),t=>t.charCodeAt(0)),e.allowCredentials){for(let t=0;t<e.allowCredentials.length;t++){let n=e.allowCredentials[t];n.id=y.decodeBytes(n.id.toString())}return e}return e}};var T=class{constructor(e){this.apiUrl=e}async appInfo(){return(await fetch(this.apiUrl,{headers:{},method:"GET"}).then(o)).app}async identifierExists(e){return(await fetch(this.apiUrl+"/user?identifier="+encodeURIComponent(e),{method:"GET"}).then(o)).user}};var g=new h,$=new d,f=class{constructor(e){this.apiUrl=e}async newRegister(e){return(await fetch(this.apiUrl+"/register/magic-link",{method:"POST",body:JSON.stringify({identifier:e,magic_link_path:window.location.pathname})}).then(o)).magic_link}async newLogin(e){return(await fetch(this.apiUrl+"/login/magic-link",{method:"POST",body:JSON.stringify({identifier:e,magic_link_path:window.location.pathname})}).then(o)).magic_link}async getStatus(e){return(await fetch(this.apiUrl+"/magic-link/status",{method:"POST",body:JSON.stringify({id:e})}).then(o)).auth_result}async activate(e){return(await fetch(this.apiUrl+"/magic-link/activate",{method:"PATCH",body:JSON.stringify({magic_link:e})}).then(o)).auth_result}async activateWebAuthnLogin(e){let t=await fetch(this.apiUrl+"/magic-link/webauthn/login/start",{body:JSON.stringify({magic_link:e}),method:"POST"}).then(o);if(!await $.psgCredIDExists(t))throw new r("psg_cred_obj does not exist in the allow list",{status:700,statusText:"Not Found"});let a=await navigator.credentials.get({publicKey:this._parsePublicKeyLogin(t.handshake.challenge.publicKey)}).catch(w=>{throw new r("could not parse publickey for login",{status:702,statusText:"PSG Parse Public Key For Login Failed"})});return a?(await fetch(this.apiUrl+"/magic-link/webauthn/login/finish",{method:"POST",body:JSON.stringify({magic_link:e,user_id:t.user.id,handshake_id:t.handshake.id,handshake_response:{id:a.id,rawId:g.encodeBytes(a.rawId),type:a.type,response:{clientDataJSON:g.encodeBytes(a.response.clientDataJSON),authenticatorData:g.encodeBytes(a.response.authenticatorData),signature:g.encodeBytes(a.response.signature),userHandle:g.encodeBytes(a.response.userHandle)}}})}).then(o)).auth_result:{auth_token:"",redirect_url:""}}async activateWebAuthnNewDevice(e){let t=await fetch(this.apiUrl+"/magic-link/webauthn/new/start",{body:JSON.stringify({magic_link:e}),method:"POST"}).then(o),n=await navigator.credentials.create({publicKey:this._parsePublicKeyNewDevice(t.handshake.challenge.publicKey)}).catch(B=>{throw new r("could not parse public key for new device",{status:701,statusText:"PSG Parse Public Key For New Device Failed"})}),a=new Uint8Array(n==null?void 0:n.response.attestationObject);U()&&(a=P(a));let c=await fetch(this.apiUrl+"/magic-link/webauthn/new/finish",{method:"POST",body:JSON.stringify({magic_link:e,user_id:t.user.id,handshake_id:t.handshake.id,handshake_response:{rawId:g.encodeBytes(n.rawId),id:n.id,type:n.type,response:{attestationObject:g.encodeBytes(a),clientDataJSON:g.encodeBytes(n.response.clientDataJSON)}},device_name:navigator.userAgent})}).then(o),w=t.user.id;return $.setPsgCredID(w,n),c.auth_result}_parsePublicKeyLogin(e){if(e.challenge=Uint8Array.from(atob(e.challenge.toString()),t=>t.charCodeAt(0)),e.allowCredentials){for(let t=0;t<e.allowCredentials.length;t++){let n=e.allowCredentials[t];n.id=g.decodeBytes(n.id.toString())}return e}return e}_parsePublicKeyNewDevice(e){return e.challenge=g.decodeBytes(e.challenge.toString()),e.user.id=g.decodeBytes(e.user.id.toString()),e}};var W={URL:"https://auth.passage.id"};var D=W;var I=ee(require("jwt-decode"),1);var R=new h,A,l,b,N=class{constructor(e){S(this,A,void 0);S(this,l,void 0);S(this,b,void 0);this.userID="",_(this,b,""),this.authToken=e,this.authGuard(),_(this,A,"v1"),_(this,l,`${D.URL}/${p(this,A)}/apps/${p(this,b)}/currentuser`)}_getAuthToken(){if(this.authToken!==void 0&&this.authToken!=="")return this.authToken;if(typeof window=="undefined")return console.warn("PassageUser is failed to access localStorage. This function must be run client-side or be provided an authToken JWT."),"";let e=localStorage.getItem("psg_auth_token");return e||""}_validJWTPayload(e){let t=["exp","iss","sub"],n=Math.floor(Date.now()/1e3);return t.forEach(a=>{if(!(a in e))return!1}),!(e.exp&&n>e.exp)}_validJWTHeader(e){let t={alg:"RS256",typ:"JWT"};return!(e.alg!==t.alg||e.typ!==t.typ)}authGuard(){let e=this._getAuthToken();try{let t=(0,I.default)(e,{header:!0}),n=(0,I.default)(e);return n!==void 0&&t!==void 0&&this._validJWTPayload(n)&&this._validJWTHeader(t)?(this.userID=n.sub,_(this,b,n.iss),!0):!1}catch{return!1}}async userInfo(){return this.authGuard()?(await fetch(p(this,l),{method:"GET",headers:{Authorization:`Bearer ${this._getAuthToken()}`}}).then(async t=>t.status!==200?void 0:await t.json()).catch(t=>{throw new r("Failed to fetch current user.",{status:404,statusText:"Not Found"})})).user:void 0}async changeEmail(e){if(!this.authGuard)throw new r("Current user is not authorized.",{status:401,statusText:"Unauthorized"});if(e===""||e===void 0)throw new r("Current user email change could not be initiated: a new email is required.",{status:409,statusText:"Conflict"});return(await fetch(`${p(this,l)}/email`,{method:"PATCH",headers:{Authorization:`Bearer ${this._getAuthToken()}`,"Content-Type":"application/json"},body:JSON.stringify({new_email:e})}).then(o)).magic_link}async changePhone(e){if(!this.authGuard)throw new r("Current user is not authorized.",{status:401,statusText:"Unauthorized"});if(e===""||e===void 0)throw new r("Current user phone change could not be initiated: a new phone is required.",{status:409,statusText:"Conflict"});return(await fetch(`${p(this,l)}/phone`,{method:"PATCH",headers:{Authorization:`Bearer ${this._getAuthToken()}`,"Content-Type":"application/json"},body:JSON.stringify({new_phone:e})}).then(o)).magic_link}async editDevice(e,t){if(!this.authGuard)throw new r("Current user is not authorized.",{status:409,statusText:"Conflict"});if(e===""||e===void 0)throw new r("A deviceID is required for an edit device request.",{status:400,statusText:"Bad Request"});if(Object.keys(t).length===0)throw new r("Edit device request must not have an empty request body.",{status:400,statusText:"Bad Request"});return(await fetch(`${p(this,l)}/devices/${e}`,{method:"PATCH",headers:{Authorization:`Bearer ${this._getAuthToken()}`,"Content-Type":"application/json"},body:JSON.stringify(H({},t))}).then(o)).device}async listDevices(){if(!this.authGuard)throw new r("Current user is not authorized.",{status:401,statusText:"Unauthorized"});return(await fetch(`${p(this,l)}/devices/`,{method:"GET",headers:{Authorization:`Bearer ${this._getAuthToken()}`,"Content-Type":"application/json"}}).then(o)).devices}async addDevice(){if(!this.authGuard())throw new r("Current user is not authorized.",{status:401,statusText:"Unauthorized"});let e=await fetch(p(this,l)+"/devices/start",{headers:{Authorization:`Bearer ${this._getAuthToken()}`},method:"POST"}).then(o),t=await navigator.credentials.create({publicKey:this._parsePublicKey(e.handshake.challenge.publicKey)}).catch(c=>{throw new r("failed to parse public key",{status:701,statusText:"PSG Parse Public Key For New Device Failed"})}).then(c=>c),n=e.user.id;return(await fetch(p(this,l)+"/devices/finish",{headers:{Authorization:`Bearer ${this._getAuthToken()}`},method:"POST",body:JSON.stringify({user_id:n,handshake_id:e.handshake.id,handshake_response:{rawId:R.encodeBytes(t==null?void 0:t.rawId),id:t==null?void 0:t.id,type:t==null?void 0:t.type,response:{attestationObject:R.encodeBytes(t==null?void 0:t.response.attestationObject),clientDataJSON:R.encodeBytes(t==null?void 0:t.response.clientDataJSON)}}})}).then(o)).device}async deleteDevice(e){if(!this.authGuard())throw new r("Current user is not authorized.",{status:401,statusText:"Unauthorized"});if(!e)throw new r("A deviceID is required to delete a device.",{status:404,statusText:"Not Found"});let t=!1;return t=await fetch(`${p(this,l)}/devices/${e}`,{method:"DELETE",headers:{Authorization:`Bearer ${this._getAuthToken()}`,"Content-Type":"application/json"}}).then(async n=>n.ok?!0:await n.text().then(a=>{throw new r(a,n)})),t}_parsePublicKey(e){return e.challenge=R.decodeBytes(e.challenge.toString()),e.user.id=R.decodeBytes(e.user.id.toString()),e}};A=new WeakMap,l=new WeakMap,b=new WeakMap;var z=class{constructor(e){this.appID=e,this.baseUrl=D.URL,this.apiVersion="v1",this.fullUrl=`${this.baseUrl}/${this.apiVersion}/apps/${this.appID}`}credIDExists(e){let t=localStorage.getItem("psg_cred_obj");return t?!!JSON.parse(t)[e]:!1}setAuthToken(e){new d().setAuthToken(e)}signOut(){new d().deleteAuthToken()}async register(e){return await new O(this.fullUrl,e).withWebAuthn()}async login(e){return await new L(this.fullUrl,e).withWebAuthn()}async appInfo(){return await new T(this.fullUrl).appInfo()}checkWebauthnConfig(e){let t=!0;return e.auth_origin.replace(/\/$/,"")!=window.location.origin.replace(/\/$/,"")&&(console.error('The auth_origin configured for webauthn in your app settings does not match the "origin" of your current URL.  Please reconfigure this in the admin console. (Your current "origin" is `'+window.location.origin+"`) Passage will continue to work with other authentication methods."),t=!1),t}async isWebauthnSupported(e){let t=!0;return navigator.brave&&await navigator.brave.isBrave()?t=!1:window.PublicKeyCredential?e?t=!0:await window.PublicKeyCredential.isUserVerifyingPlatformAuthenticatorAvailable().then(n=>{n?t=!0:t=!1}).catch(n=>console.log("Something went wrong.")):t=!1,t}async identifierExists(e){return await new T(this.fullUrl).identifierExists(e)}async newRegisterMagicLink(e){return await new f(this.fullUrl).newRegister(e)}async newLoginMagicLink(e){return await new f(this.fullUrl).newLogin(e)}async magicLinkActivate(e){return await new f(this.fullUrl).activate(e)}async magicLinkActivateWebAuthnLogin(e){return await new f(this.fullUrl).activateWebAuthnLogin(e)}async magicLinkActivateWebAuthnNewDevice(e){return await new f(this.fullUrl).activateWebAuthnNewDevice(e)}async getMagicLinkStatus(e){return await new f(this.fullUrl).getStatus(e)}getCurrentUser(e){return new N(e)}};var M=(n=>(n.email="email",n.phone="phone",n.both="both",n))(M||{});var C=(n=>(n.Active="active",n.Inactive="inactive",n.Pending="pending",n))(C||{});module.exports=te(se);0&&(module.exports={Identifier,Passage,PassageError,PassageErrorCode,PassageUserStatusEnum,User});
